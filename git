#!/usr/bin/env ruby

require_relative 'lib/service'

NETWORK_COMMANDS = %w(pull clone fetch push ls-remote)
HOSTS = {
  'git.debian.org' => :debian,
  'anongit.kde.org' => :kde
}

def run(args)
  system('/usr/bin/git', *args)
  $?.exitstatus
end

# Only sync network-io commands. Local commands do not benefit from being
# locked which in turn only slows down the entire affair by an incredible
# amount.
synchronize = false
NETWORK_COMMANDS.each do |c|
  if ARGV.include?(c)
    synchronize = true
    break
  end
end

exit_code = 0
if synchronize
  monitor = Service.start
  host = nil
  HOSTS.each { |h, sym| host = sym && break if ARGV.join.include?(h) }
  monitor.synchronize(Process.pid, host) do
    exit_code = run(ARGV)
  end
else
  exit_code = run(ARGV)
end

exit exit_code
